HASH_SIZE = "5e9"
METRICS = ['wip', 'ip']
SETS = config


# No user serviceable bits below here
ALLSAMPLES = set()
for setname, runs in SETS.items():
    for r in runs:
        ALLSAMPLES.add(r)
ALLSAMPLES = list(ALLSAMPLES)


## BEGIN RULES
rule all:
    input:
        expand("data/reads.sickle/{run}_qc_il.fastq", run=ALLSAMPLES)
        # expand("data/reads.trimit/{run}_qc_il.fastq", run=ALLSAMPLES)


rule clean:
    shell:
        "rm -rf data .snakemake"

rule sra:
    output:
        "data/sra/{run}.sra",
    log:
        "data/log/getrun/{run}.log"
    params:
        srr=lambda w: w.run
    shell:
        "get-run.py"
        "   -d data/sra"
        "   -s "
        "   -i {wildcards.run}"
        " >{log} 2>&1"


rule sicklereads:
    input:
        "data/sra/{run}.sra",
    output:
        "data/reads.sickle/{run}_qc_il.fastq",
    log:
        "data/log/sicklereads/{run}.log"
    shell:
        "( fastq-dump"
        "   --split-spot"
        "   --skip-technical"
        "   --stdout"
        "   --readids"
        "   --defline-seq '@$sn/$ri'"
        "   --defline-qual '+'"
        "   {input}"
 	" | sickle se"
        "   -t sanger"
	"   -f /dev/stdin"
        "   -q 28"
        "   -l 20"
        "   -o {output}"
	") 2>{log}"

rule trimitreads:
    input:
        "data/sra/{run}.sra",
    output:
        r="data/reads.trimit/{run}_qc_il.fastq.gz",
        yml="data/qc_reports/{run}.yml",
    log:
        "data/log/qcreads/{run}.log"
    shell:
        "( fastq-dump"
        "   --split-spot"
        "   --skip-technical"
        "   --stdout"
        "   --readids"
        "   --defline-seq '@$sn/$ri'"
        "   --defline-qual '+'"
        "   {input}"
 	" | trimit"
        "   -y {output.yml}"
        "   -q 28"
        "   -"
        " | gzip --fast > {output.r})"
        " 2>{log}"
